# https://opensource.com/article/18/3/manage-workstation-ansible
# sudo apt install software-properties-common && sudo apt-add-repository ppa:ansible/ansible && sudo apt update && sudo apt install ansible
# ansible-pull -e "ansible_become_password=[SUDO_PASSWORD]" -U https://github.com/chathura2031/ansible-test.git
- name: Install packages
  hosts: localhost
  become: true
  tasks:
    - name: Update and upgrade apt packages
      apt:
        upgrade: yes
        update_cache: yes
        cache_valid_time: 86400

    - name: Install udisks2 (provides udisksctl)
      apt:
        name: udisks2
        state: latest

    - name: Install vim (text editor)
      apt:
        name: vim
        state: latest

    - name: Install xorg (display server)
      apt:
        name: xorg
        state: latest

    - name: Install openbox (window manager)
      apt:
        name: openbox
        state: latest

    - name: Install obconf (openbox configuration utility)
      apt:
        name: obconf
        state: latest

    - name: Install lxappearance (theme switcher)
      apt:
        name: lxappearance
        state: latest

    - name: Install tint2 (panel manager)
      apt:
        name: tint2
        state: latest

    - name: Install picom (compositor)
      apt:
        name: picom
        state: latest

    - name: Install nitrogen (desktop background browser/setter)
      apt:
        name: nitrogen
        state: latest

    - name: Install sddm (display manager)
      apt:
        name: sddm
        state: latest

    - name: Install alsa-base (API for sound card device drivers)
      apt:
        name: alsa-base
        state: latest

    - name: Install pavucontrol (volume control tool)
      apt:
        name: pavucontrol
        state: latest

    - name: Install libnotify (notification library)
      apt:
        name: libnotify-bin
        state: latest

    - name: Install xbacklight (brightness controller)
      apt:
        name: xbacklight
        state: latest

    - name: Install git
      apt:
        name: git
        state: latest

    - name: Install xclip
      apt:
        name: xclip
        state: latest

    - name: Install zip
      apt:
        name: zip
        state: latest

    - name: Install unzip
      apt:
        name: unzip
        state: latest

    - name: Install yakuake (terminal emulator)
      apt:
        name: yakuake
        state: latest

    - name: Install thunar (file manager)
      apt:
        name: thunar
        state: latest

    - name: Install jgmenu (app menu)
      apt:
        name: jgmenu
        state: latest

    - name: Add repository for ulauncher
      apt_repository:
        repo: ppa:agornostal/ulauncher

    - name: Install ulauncher (app launcher)
      apt:
        name: ulauncher
        state: latest

    - name: Install arc theme
      apt:
        name: arc-theme
        state: latest

    - name: Install flatpak (cross-distro package manager)
      apt:
        name: flatpak
        state: latest

    - name: Add flathub repository
      community.general.flatpak_remote:
        name: flathub
        state: present
        flatpakrepo_url: https://flathub.org/repo/flathub.flatpakrepo
        method: system

    - name: Install chromium (browser)
      flatpak:
        name: com.github.Eloston.UngoogledChromium
        state: present

    - name: Download vscode package
      get_url:
        url: https://code.visualstudio.com/sha/download?build=stable&os=linux-deb-x64
        dest: /tmp/code.deb

    - name: Install vscode
      apt:
        deb: /tmp/code.deb

    - name: Install mpv (video player)
      apt:
        name: mpv
        state: latest

    - name: Install qalculate
      apt:
        name: qalculate-gtk
        state: latest

    - name: Install thunderbird
      apt:
        name: thunderbird
        state: latest

    - name: Install libreoffice
      apt:
        name: libreoffice
        state: latest

    - name: Install discord
      flatpak:
        name: com.discordapp.Discord
        state: present

    - name: Install gimp
      apt:
        name: gimp
        state: latest

    - name: Install podman
      apt:
        name: podman
        state: latest

- name: Configure packages
  hosts: localhost
  tasks:
    - name: Set the timezone
      become: true
      community.general.timezone:
        name: Australia/Melbourne

    - name: Configure openbox
      become: true
      copy:
        src: ./openbox
        dest: /etc/xdg/

    - name: Configure xbacklight
      become: true
      copy:
        src: ./xorg.conf
        dest: /etc/X11/

    - name: Configure vim
      become: true
      copy:
        src: ./vimrc
        dest: /etc/vim/

    - name: Configure tint2
      copy:
        src: ./tint2rc
        dest: ~/.config/tint2/

    - name: Ensures the dunst folder exists
      become: true
      file:
        path: /etc/dunst
        state: directory

    - name: Configure dunst
      become: true
      copy:
        src: ./dunstrc
        dest: /etc/dunst/dunstrc

    - name: Configure yakuake
      copy:
        src: ./yakuakerc
        dest: ~/.config/
      
    - name: Configure jgmenu
      copy:
        src: ./jgmenurc
        dest: ~/.config/jgmenu/

    - name: Configure ulauncher
      copy:
        src: ./ulauncher
        dest: ~/.config/

    - name: Transfer wallpapers
      copy:
        src: ./Wallpapers
        dest: ~/

    - name: Configure nitrogen
      copy:
        src: ./nitrogen
        dest: ~/.config/

    - name: Configure sddm
      become: true
      copy:
        src: ./sddm.conf
        dest: /etc/

    - name: Configure chromium
      copy:
        src: ./Preferences
        dest: ~/.var/app/com.github.Eloston.UngoogledChromium/config/chromium/Default/

    - name: Configure start menu
      become: true
      copy:
        src: ./start_menu
        dest: /usr/bin/
        mode: preserve
        
    - name: Ensures the VSCode folder exists
      file:
        path: ~/.config/Code/User
        state: directory

    - name: Configure vscode
      copy:
        src: ./settings.json
        dest: ~/.config/Code/User/settings.json

    - name: Install vim in vscode
      shell:
        cmd: code --install-extension vscodevim.vim

    - name: Configure volume controller
      become: true
      copy:
        src: ./volume-control
        dest: /opt/
        mode: preserve

    - name: Create a symbolic link to the volume control file
      become: true
      file:
        src: /opt/volume-control/volume_control
        dest: /usr/local/bin/volume_control
        state: link

    - name: Configure brightness controller
      become: true
      copy:
        src: ./brightness-control
        dest: /opt/
        mode: preserve

    - name: Create a symbolic link to the brightness control file
      become: true
      file:
        src: /opt/brightness-control/brightness_control
        dest: /usr/local/bin/brightness_control
        state: link

    - name: Add the lockscreen script
      become: true
      copy:
        src: ./lockscreen
        dest: /usr/local/bin/
        mode: preserve

- name: Setup networking
  become: true
  hosts: localhost
  tasks:
    - name: Remove netplan
      apt:
        name: netplan.io
        state: absent
        purge: true

    - name: Install connman gui (network manager)
      apt:
        name: cmst
        state: latest

    - name: Configure connman
      ansible.builtin.systemd_service:
        name: systemd-networkd.socket
        enabled: false
        state: stopped

    - name: Configure connman
      ansible.builtin.systemd_service:
        name: systemd-networkd
        enabled: false
        state: stopped

    - name: Configure connman
      ansible.builtin.systemd_service:
        name: networkd-dispatcher
        enabled: false
        state: stopped

    - name: Configure connman
      ansible.builtin.systemd_service:
        name: systemd-networkd-wait-online
        enabled: false
        state: stopped

    - name: Configure connman
      ansible.builtin.systemd_service:
        name: systemd-resolved.service
        enabled: false
        state: stopped

- name: Finialise
  hosts: localhost
  tasks:
    - name: Get user confirmation to reboot
      ansible.builtin.pause:
        prompt: "Press enter to reboot system."

    - name: Reboot system
      ansible.builtin.reboot:
        reboot_timeout: 10

# TODO: Add `flatpak run com.github.Eloston.UngoogledChromium Chromium.Web.Store.crx`
# TODO: Install EWW:
# curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
# A lot of the packages below are also neede to build dunst so maybe do them together
# sudo apt install build-essential pkg-config cargo libglib2.0-dev librust-pangocairo-dev libatk1.0-dev libgdk-pixbuf2.0-dev librust-gdk-sys-dev
# git clone https://github.com/elkowar/eww && cd eww
# cargo build --release --no-default-features --features x11
# mkdir ~/.config/eww
